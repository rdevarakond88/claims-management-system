# =============================================================================
# Claims Management System - Environment Configuration
# =============================================================================
#
# This file contains all environment variables needed for the application.
# Copy this file to .env and fill in your actual values.
#
# IMPORTANT: Never commit .env to version control!
#
# =============================================================================

# -----------------------------------------------------------------------------
# Application Environment
# -----------------------------------------------------------------------------
# Options: development, production, test
NODE_ENV=development

# Server port (default: 3000)
PORT=3000

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL connection string
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=SCHEMA
#
# Development example:
DATABASE_URL=postgresql://cms_user:cms_password@localhost:5432/cms_dev?schema=public
#
# Production example:
# DATABASE_URL=postgresql://user:password@db.example.com:5432/cms_prod?schema=public

# -----------------------------------------------------------------------------
# Session Configuration
# -----------------------------------------------------------------------------
# Secret key for session encryption (REQUIRED)
# MUST be at least 32 characters
# Generate with: openssl rand -base64 32
#
# ⚠️  CHANGE THIS IN PRODUCTION! ⚠️
SESSION_SECRET=your-super-secret-session-key-min-32-chars-change-in-production

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# Log level: error, warn, info, http, debug
LOG_LEVEL=info

# Enable file logging (true/false)
# In production, file logging is always enabled regardless of this setting
ENABLE_FILE_LOGGING=false

# -----------------------------------------------------------------------------
# CORS Configuration
# -----------------------------------------------------------------------------
# Comma-separated list of allowed origins for CORS
# Development example:
CORS_ORIGINS=http://localhost:5173,http://localhost:5174
#
# Production example:
# CORS_ORIGINS=https://app.example.com,https://admin.example.com

# -----------------------------------------------------------------------------
# Rate Limiting Configuration
# -----------------------------------------------------------------------------
# Global rate limit window in milliseconds (default: 900000 = 15 minutes)
RATE_LIMIT_WINDOW_MS=900000

# Maximum requests per window per IP (default: 100)
RATE_LIMIT_MAX_REQUESTS=100

# Maximum failed auth attempts per window (default: 5)
AUTH_RATE_LIMIT_MAX=5

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------
# Enable Helmet security headers (true/false) (default: true)
ENABLE_HELMET=true

# -----------------------------------------------------------------------------
# AI Categorization Configuration
# -----------------------------------------------------------------------------
# Anthropic API key for AI-powered claim categorization (REQUIRED for AI features)
# Get your API key from: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# AI model to use (default: claude-3-5-sonnet-20241022)
AI_CATEGORIZATION_MODEL=claude-3-5-sonnet-20241022

# Maximum tokens for AI response (default: 500)
AI_CATEGORIZATION_MAX_TOKENS=500

# AI request timeout in milliseconds (default: 5000 = 5 seconds)
AI_CATEGORIZATION_TIMEOUT=5000

# Enable/disable AI categorization (true/false) (default: true)
# If disabled, claims will default to STANDARD priority
AI_CATEGORIZATION_ENABLED=true

# Number of retry attempts for AI requests (default: 0)
AI_CATEGORIZATION_RETRY_ATTEMPTS=0

# -----------------------------------------------------------------------------
# Optional: External Services
# -----------------------------------------------------------------------------
# Sentry error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Redis connection string (optional - for session store in production)
# REDIS_URL=redis://localhost:6379

# -----------------------------------------------------------------------------
# Production Deployment Checklist
# -----------------------------------------------------------------------------
# Before deploying to production, ensure:
#
# ✅ SESSION_SECRET is changed to a strong, unique value (32+ characters)
# ✅ DATABASE_URL points to your production database (not localhost)
# ✅ NODE_ENV is set to "production"
# ✅ CORS_ORIGINS only includes your production domains
# ✅ LOG_LEVEL is set to "info" or "warn" (not "debug")
# ✅ ENABLE_FILE_LOGGING is set to "true" (or omitted for auto-enable)
# ✅ All secrets are stored securely (e.g., AWS Secrets Manager, Vault)
# ✅ .env file is not committed to version control
# ✅ Database credentials have appropriate permissions (not superuser)
# ✅ SSL/TLS is enabled for database connections
# ✅ Rate limiting values are appropriate for your traffic
#
# =============================================================================
